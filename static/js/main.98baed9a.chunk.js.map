{"version":3,"sources":["utils.js","Components/Button.js","Components/Modal.js","Containers/StartUpModal.js","EcwidService.js","CartService.js","Containers/Cart.js","Instanse.js","sessionStorageService.js","EcwidProvider.js","registerServiceWorker.js","index.js"],"names":["print","Object","entries","blue","brown","gray","green","red","orange","purple","yellow","reduce","api","_ref","_ref2","slicedToArray","name","colors","objectSpread","defineProperty","shortLabel","longerMessage","optionalSuffix","arguments","length","undefined","console","log","concat","UpdateQueryString","key","value","url","window","location","href","hash","re","RegExp","test","replace","split","separator","indexOf","getParameterByName","results","exec","decodeURIComponent","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","ShopWithFriendsButton","_this$props","this","props","children","rest","objectWithoutProperties","react_default","a","es_button","assign","padding","Label","Component","styled","_templateObject","modal","title","onCancel","onClose","visible","FormItem","Form","Item","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","status","error","hideModal","setState","handleSubmit","e","preventDefault","form","validateFields","err","userName","onSubmit","isClientInstance","message","success","textInput","React","createRef","sessionId","_this2","getFieldDecorator","es_form","layout","rules","required","input","size","placeholder","type","htmlType","makeUrl","className","disabled","onClick","icon","Modal_ShopWithFriendsButton","footer","renderFooter","renderContent","create","EcwidService","getTotal","Promise","resolve","reject","Ecwid","cart","calculateTotal","order","total","clear","Cart","addProduct","product","callback","addProductsFromCart","addCartPromises","map","c","content","items","i","id","quantity","all","gotoCheckout","CartService","allReadyToCheckout","every","owner","isReadyToCheckout","Panel","Collapse","round2","n","decimals","Number","Math","round","columns","dataIndex","width","isDisabled","react","Button_ShopWithFriendsButton","onReadyToCheckout","customerId","onReadyToCheckOut","renderPanelHeader","amount","isReady","PanelHeader","theme","twoToneColor","collapse","defaultActiveKey","isEmpty","header","totalPriceForItems","table","dataSource","pagination","rowKey","record","sortedInfo","divider","totalPrice","price","showModal","renderCart","ghost","SocketContext","Consumer","defaultProps","Cart_templateObject","Instance","uid","setName","connectionPromise","then","startSession","connect","onConnectEstablished","connectEstablished","onConnectError","connectStatus","Container","Cart_Cart","motherId","StartUpModal","Instanse_templateObject","formatKet","sessionStorageService","sessionStorage","getItem","val","setItem","serverUrl","protocols","createContext","EcwidProvider","eventHandler","asyncToGenerator","regenerator_default","mark","_callee","data","_ref3","event","payload","wrap","_context","prev","next","JSON","parse","sent","t0","setSocketStatus","setCustomerId","OnCartChanged","add","onCartInit","abrupt","multicartContent","stop","_x","apply","establishConnect","connectUrl","socket","WebSocket","setupSocket","resolveConnectionPromise","rejectConnectionPromise","sendToSocket","customerName","joinSession","onMessage","send","stringify","cartContent","onCartChange","customerReadyToCheckout","getMotherId","Function","prototype","nanoid","onOpenSocket","onCloseSocket","onopen","onmessage","_this3","onclose","wasClean","code","reason","_this4","onerror","_this$state","Provider","authorized","addToCart","Instanse_Instance","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","renderApp","page","div","getElementById","querySelector","ReactDOM","render","EcwidProvider_EcwidProvider","EcwidApp","init","app_id","autoloadedflag","autoheight","OnAPILoaded","OnPageLoaded","URL","process","origin","addEventListener","fetch","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.98baed9a.chunk.js","sourcesContent":["const COLORS = {\n  blue: [\"#1E88E5\", \"#90CAF9\"],\n  brown: [\"#6D4C41\", \"#D7CCC8\"],\n  gray: [\"#212121\", \"#BDBDBD\"],\n  green: [\"#388E3C\", \"#A5D6A7\"],\n  red: [\"#E53935\", \"#EF9A9A\"],\n  orange: [\"#F4511E\", \"#FFAB91\"],\n  purple: [\"#8E24AA\", \"#E1BEE7\"],\n  yellow: [\"#FFD600\", \"#FFF59D\"]\n};\n\nexport const print = Object.entries(COLORS).reduce(\n  (api, [name, colors]) => ({\n    [name]: (shortLabel, longerMessage, optionalSuffix = \"\") =>\n      /* eslint-disable */\n      console.log(\n        /* eslint-enable */\n\n        `%c${shortLabel}%c${longerMessage}%c${optionalSuffix}`,\n        `background-color: ${\n          colors[0]\n        }; color: #fff; padding: 2px 4px; font-weight: bold;`,\n        `background-color: ${colors[1]}; color: #000; padding: 2px 4px;`,\n        optionalSuffix !== \"\"\n          ? `background-color: ${\n              colors[0]\n            }; color: #fff; padding: 2px 4px; font-weight: bold;`\n          : \"\"\n      ),\n    ...api\n  }),\n  {}\n);\n\nexport function UpdateQueryString(key, value, url) {\n  if (!url) url = window.location.href;\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|#|$)(.*)\", \"gi\"),\n    hash;\n\n  if (re.test(url)) {\n    if (typeof value !== \"undefined\" && value !== null)\n      return url.replace(re, \"$1\" + key + \"=\" + value + \"$2$3\");\n    else {\n      hash = url.split(\"#\");\n      url = hash[0].replace(re, \"$1$3\").replace(/(&|\\?)$/, \"\");\n      if (typeof hash[1] !== \"undefined\" && hash[1] !== null)\n        url += \"#\" + hash[1];\n      return url;\n    }\n  } else {\n    if (typeof value !== \"undefined\" && value !== null) {\n      var separator = url.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n      hash = url.split(\"#\");\n      url = hash[0] + separator + key + \"=\" + value;\n      if (typeof hash[1] !== \"undefined\" && hash[1] !== null)\n        url += \"#\" + hash[1];\n      return url;\n    } else return url;\n  }\n}\n\nexport function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport const copyToClipboard = str => {\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  const selected =\n    document.getSelection().rangeCount > 0\n      ? document.getSelection().getRangeAt(0)\n      : false;\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n};\n","import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport styled from \"react-emotion\";\n\nexport default class ShopWithFriendsButton extends Component {\n  render() {\n    const { children, ...rest } = this.props;\n    return (\n      <Button\n        style={{\n          padding: \"0 15px\"\n        }}\n        {...rest}\n      >\n        <Label>{children}</Label>\n      </Button>\n    );\n  }\n}\n\nconst Label = styled(\"span\")`\n  margin-left: 8px !important;\n`;\n","import React, { Component } from \"react\";\nimport { Modal } from \"antd\";\nimport \"rc-dialog/assets/index.css\";\n\nexport default class ShopWithFriendsButton extends Component {\n  render() {\n    return (\n      <Modal\n        title={this.props.title}\n        onCancel={this.props.onClose}\n        visible={this.props.visible}\n        {...this.props}\n      >\n        {this.props.children}\n      </Modal>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Input, Form, Button, message } from \"antd\";\nimport styled from \"react-emotion\";\nimport Modal from \"../Components/Modal\";\nimport { UpdateQueryString } from \"../utils\";\nimport { prop } from \"ramda\";\n\nconst FormItem = Form.Item;\n\nclass ShopWithFriendsButton extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n\n  state = {\n    status: \"input\",\n    error: false\n  };\n\n  hideModal = () => {\n    this.setState({ visible: false });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, { userName }) => {\n      if (!err) {\n        this.props.onSubmit(userName);\n\n        if (this.props.isClientInstance) {\n          this.props.onClose();\n        } else {\n          this.setState({ status: \"link\" });\n        }\n      }\n    });\n  };\n\n  makeUrl() {\n    return UpdateQueryString(\"buddyshoppingId\", this.props.sessionId);\n  }\n\n  copyToClipboard = str => {\n    const el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style.position = \"absolute\";\n    el.style.left = \"-9999px\";\n    document.body.appendChild(el);\n    const selected =\n      document.getSelection().rangeCount > 0\n        ? document.getSelection().getRangeAt(0)\n        : false;\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n\n    message.success(\"Successful copied\");\n  };\n\n  renderContent() {\n    const { getFieldDecorator } = this.props.form;\n    switch (this.state.status) {\n      case \"input\":\n        return (\n          <Form onSubmit={this.handleSubmit} layout=\"inline\">\n            <FormItem>\n              {getFieldDecorator(\"userName\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  size=\"large\"\n                  name=\"userName\"\n                  placeholder=\"Your username\"\n                />\n              )}\n            </FormItem>\n            <FormItem>\n              <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n                Submit\n              </Button>\n            </FormItem>\n          </Form>\n        );\n\n      case \"link\": {\n        const url = this.makeUrl();\n        return (\n          <Form onSubmit={this.handleSubmit} layout=\"inline\">\n            <h4 className=\"h4\">Скопируй и раздай друзьям</h4>\n            <FormItem>\n              <Input disabled value={url} size=\"large\" />\n            </FormItem>\n            <FormItem>\n              <Button\n                type=\"primary\"\n                size=\"large\"\n                onClick={() => this.copyToClipboard(url)}\n                icon=\"copy\"\n              >\n                Copy\n              </Button>\n            </FormItem>\n          </Form>\n        );\n      }\n\n      default:\n        return null;\n    }\n  }\n\n  renderFooter() {\n    return (\n      <button onClick={this.props.onClose} className=\"btn btn-primary\">\n        Close\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        visible={this.props.visible}\n        onClose={this.props.onClose}\n        title=\"пожалуйста представьтесь\"\n        footer={this.renderFooter()}\n      >\n        <div className=\"fieldsets-batch fieldsets-batch--with-single-field\">\n          {this.renderContent()}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default Form.create()(ShopWithFriendsButton);\n","export default {\n  getTotal() {\n    return new Promise((resolve, reject) => {\n      window.Ecwid.cart.calculateTotal(order => {\n        resolve(order.total);\n      });\n    });\n  },\n\n  clear() {\n    window.Ecwid.Cart.clear();\n  },\n  addProduct(product) {\n    return new Promise(callback => {\n      window.Ecwid.Cart.addProduct({\n        ...product,\n        callback\n      });\n    });\n  },\n  addProductsFromCart(cart) {\n    const addCartPromises = cart.map(c => {\n      c.content.items.map(i => {\n        this.addProduct({\n          id: i.product.id,\n          quantity: i.quantity\n        });\n      });\n    });\n\n    return Promise.all(addCartPromises);\n  },\n  gotoCheckout() {\n    window.Ecwid.Cart.gotoCheckout();\n  }\n};\n","export default {\n  allReadyToCheckout(cart) {\n    if (!cart) return false;\n    return cart.every(c => c.owner.isReadyToCheckout);\n  }\n};\n","import React, { Component, Fragment } from \"react\";\nimport styled from \"react-emotion\";\nimport { isEmpty } from \"ramda\";\nimport { Collapse, Table, Icon, Divider, message } from \"antd\";\nimport Button from \"../Components/Button\";\nimport { SocketContext } from \"../EcwidProvider\";\nimport Modal from \"../Components/Modal\";\nimport EcwidService from \"../EcwidService\";\nimport CartService from \"../CartService\";\nimport { UpdateQueryString, copyToClipboard } from \"../utils\";\n\nconst Panel = Collapse.Panel;\n\nconst round = (n, decimals = 0) =>\n  Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`);\nconst round2 = n => round(n, 2);\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"product.name\",\n    key: \"product.name\"\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"product.price\",\n    key: \"product.price\",\n    width: 100\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"quantity\",\n    key: \"quantity\",\n    width: 100\n  }\n];\n\nexport default class Cart extends Component {\n  static defaultProps = {\n    cart: []\n  };\n\n  state = {\n    visible: false\n  };\n\n  onReadyToCheckOut(cart) {\n    this.hideModal();\n    EcwidService.clear();\n    EcwidService.addProductsFromCart(cart);\n  }\n\n  renderFooter = cart => {\n    const { name, isClientInstance } = this.props;\n    const isDisabled =\n      !isClientInstance && !CartService.allReadyToCheckout(cart);\n    return (\n      <Fragment>\n        <Button\n          onClick={() => {\n            copyToClipboard(\n              UpdateQueryString(\"buddyshoppingId\", this.props.sessionId)\n            );\n            message.success(\"Successful copied\");\n          }}\n        >\n          Copy invite link\n        </Button>\n        <Button\n          type=\"default\"\n          onClick={() =>\n            this.props.onReadyToCheckout(true, this.props.customerId)\n          }\n        >\n          Ready to checkout!\n        </Button>\n\n        {!isClientInstance && (\n          <Button\n            disabled={isDisabled}\n            type=\"primary\"\n            onClick={() => this.onReadyToCheckOut(cart)}\n          >\n            Go to checkout\n          </Button>\n        )}\n      </Fragment>\n    );\n  };\n\n  renderPanelHeader = (name, amount, isReady) => {\n    return (\n      <PanelHeader>\n        <span>\n          <Icon\n            type={isReady ? \"smile\" : \"meh\"}\n            theme=\"twoTone\"\n            twoToneColor={isReady ? \"#52c41a\" : \"\"}\n          />{\" \"}\n          {name}\n        </span>\n        <span>{amount}</span>\n      </PanelHeader>\n    );\n  };\n\n  renderContent = cart => {\n    const { name } = this.props;\n    return (\n      <Fragment>\n        <Collapse defaultActiveKey={name}>\n          {cart.map(({ owner, content }) => {\n            if (isEmpty(content)) return null;\n\n            return (\n              <Panel\n                header={this.renderPanelHeader(\n                  owner.name,\n                  round2(this.totalPriceForItems(content.items)),\n                  owner.isReadyToCheckout\n                )}\n                key={owner.name}\n                styled={{\n                  padding: 0\n                }}\n              >\n                <Table\n                  columns={columns}\n                  dataSource={content.items}\n                  pagination={false}\n                  size=\"small\"\n                  rowKey={record => record.name}\n                  sortedInfo={null}\n                />\n              </Panel>\n            );\n          })}\n        </Collapse>\n        <Divider />\n        Примерная общая сумма: {round2(this.totalPrice(cart))}\n      </Fragment>\n    );\n  };\n\n  totalPrice(cart) {\n    if (!cart) return 0;\n    return cart.reduce((a, c) => {\n      return a + this.totalPriceForItems(c.content.items);\n    }, 0);\n  }\n\n  totalPriceForItems = items => {\n    if (!items) return 0;\n    return items.reduce((a, c) => {\n      return a + c.product.price * c.quantity;\n    }, 0);\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n  hideModal = () => {\n    this.setState({ visible: false });\n  };\n\n  renderCart = ({ cart }) => {\n    if (!cart) return;\n    return (\n      <Fragment>\n        <Button onClick={this.showModal} size=\"large\" type=\"primary\" ghost>\n          Buddy Cart\n        </Button>\n        <Modal\n          visible={this.state.visible}\n          onClose={this.hideModal}\n          title=\"Список совместных покупок\"\n          footer={this.renderFooter(cart)}\n        >\n          <div className=\"fieldsets-batch fieldsets-batch--with-single-field\">\n            {this.renderContent(cart)}\n          </div>\n        </Modal>\n      </Fragment>\n    );\n  };\n  render() {\n    return <SocketContext.Consumer>{this.renderCart}</SocketContext.Consumer>;\n  }\n}\n\nconst PanelHeader = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  padding-right: 16px;\n`;\n","import React, { Component, Fragment } from \"react\";\nimport Button from \"./Components/Button\";\nimport StartUpModal from \"./Containers/StartUpModal\";\nimport Cart from \"./Containers/Cart\";\nimport styled from \"react-emotion\";\nimport \"./App.css\";\n\nexport default class Instance extends Component {\n  state = {\n    showModal: false,\n    name: null,\n    uid: null\n  };\n\n  componentDidMount() {\n    if (this.props.isClientInstance) {\n      this.showModal();\n    }\n  }\n\n  setName = name => {\n    this.connectionPromise.then(() => {\n      this.setState({ name });\n      this.props.startSession(name);\n    });\n  };\n\n  showModal = () => {\n    this.connectionPromise = this.props.connect();\n    this.setState({ showModal: true });\n  };\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  onConnectEstablished = uid => {\n    this.setState({ connectEstablished: true, uid });\n  };\n\n  onConnectError = () => {};\n\n  render() {\n    const { connectStatus } = this.props;\n    return (\n      <Container>\n        {connectStatus !== \"authorized\" && (\n          <Button\n            onClick={this.showModal}\n            type=\"primary\"\n            size=\"large\"\n            icon=\"shopping-cart\"\n          >\n            Shop with friends\n          </Button>\n        )}\n        {connectStatus === \"authorized\" && (\n          <Cart\n            name={this.state.name}\n            customerId={this.props.customerId}\n            onReadyToCheckout={this.props.onReadyToCheckout}\n            isClientInstance={this.props.isClientInstance}\n            sessionId={this.props.motherId}\n          />\n        )}\n        <StartUpModal\n          isClientInstance={this.props.isClientInstance}\n          connectStatus={this.props.connectStatus}\n          visible={this.state.showModal}\n          onClose={this.hideModal}\n          onSubmit={this.setName}\n          sessionId={this.props.motherId}\n        />\n      </Container>\n    );\n  }\n}\n\nconst Container = styled(\"div\")`\n  text-align: center;\n  padding-bottom: 10px !important;\n`;\n","const formatKet = key => \"BuddyShopping\".concat(\":\").concat(key);\n\nexport default {\n  get(key) {\n    return sessionStorage.getItem(formatKet(key));\n  },\n  set(key, val) {\n    sessionStorage.setItem(formatKet(key), val);\n    return val;\n  }\n};\n","import nanoid from \"nanoid\";\nimport React, { Component } from \"react\";\nimport { print, getParameterByName } from \"./utils\";\nimport Instance from \"./Instanse\";\nimport sessionStorageService from \"./sessionStorageService\";\nimport CartService from \"./CartService\";\n\nconst serverUrl = \"wss://buddyshopping.now.sh\";\nconst protocols = [\"a9c06a4168967c89b1a54ee802f6a507\"];\n// const serverUrl = \"ws://localhost:8080\";\n// const protocols = [\"secret\"];\n\nexport const SocketContext = React.createContext(2);\n\nexport default class EcwidProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.motherId = this.getMotherId();\n    this.isClientInstance = !!getParameterByName(\"buddyshoppingId\");\n\n    this.state = {\n      connectStatus: \"offline\",\n      customerId: undefined,\n      connectEstablished: false,\n      cart: null\n    };\n\n    this.connectUrl = `${serverUrl}/${this.motherId}`;\n    this.resolveConnectionPromise = Function.prototype;\n    this.rejectConnectionPromise = Function.prototype;\n  }\n\n  eventHandler = async ({ data }) => {\n    const { event, payload } = await JSON.parse(data);\n    print.blue(\"event: \", event);\n    console.log(payload);\n\n    switch (event) {\n      case \"startSession\":\n      case \"joinSession\":\n        this.setSocketStatus(\"authorized\");\n        this.setCustomerId(payload.customerId);\n        window.Ecwid.OnCartChanged.add(this.onCartInit(payload.customerId));\n        break;\n      case \"multicartUpdate\":\n        this.setSocketStatus(\"authorized\");\n        this.setState({ cart: payload.multicartContent });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  getMotherId() {\n    const motherId =\n      getParameterByName(\"buddyshoppingId\") ||\n      sessionStorageService.get(\"motherId\");\n\n    if (motherId) return motherId;\n    return sessionStorageService.set(\"motherId\", nanoid());\n  }\n\n  establishConnect = () => {\n    print.blue(\"Устанавливаю соединение\", this.connectUrl);\n    this.setSocketStatus(\"connecting\");\n    this.socket = new WebSocket(this.connectUrl, protocols);\n    this.setupSocket();\n    return new Promise((resolve, reject) => {\n      this.resolveConnectionPromise = resolve;\n      this.rejectConnectionPromise = reject;\n    });\n  };\n\n  setupSocket() {\n    this.onOpenSocket();\n    this.onCloseSocket();\n    this.onCloseSocket();\n  }\n\n  setSocketStatus(connectStatus) {\n    this.setState({ connectStatus });\n  }\n  setCustomerId(customerId) {\n    this.setState({ customerId });\n  }\n\n  startSession = name => {\n    this.sendToSocket({\n      event: \"startSession\",\n      payload: { customerName: name }\n    });\n    print.blue(\"Стартую сессию\", this.connectUrl);\n  };\n\n  joinSession = name => {\n    this.sendToSocket({\n      event: \"joinSession\",\n      payload: { customerName: name }\n    });\n    print.blue(\"Коннект к сессии\", this.connectUrl);\n  };\n\n  onOpenSocket() {\n    this.socket.onopen = () => {\n      print.green(\"Соединение установленно\", this.connectUrl);\n      this.resolveConnectionPromise();\n      this.setSocketStatus(\"connected\");\n    };\n\n    this.socket.onmessage = this.onMessage;\n  }\n\n  onCloseSocket() {\n    this.socket.onclose = event => {\n      if (event.wasClean) {\n        print.blue(\"Соединение закрыто чисто\");\n      } else {\n        print.red(\"Обрыв соединение\");\n      }\n      print.brown(\"Код: \" + event.code + \" причина: \" + event.reason);\n      this.rejectConnectionPromise(event);\n      this.setSocketStatus(\"disconnect\");\n    };\n  }\n\n  onErrorSocket() {\n    this.socket.onerror = error => {\n      console.log(error.message);\n      print.red(\"Ошибка соединение\", error.message);\n      this.setSocketStatus(\"error\");\n    };\n  }\n\n  onMessage = event => {\n    this.eventHandler(event);\n  };\n\n  sendToSocket = event => {\n    print.yellow(\"sendToSocket\", event.event);\n    console.log(event.payload);\n    this.socket.send(JSON.stringify(event));\n  };\n\n  onCartInit = customerId => cartContent => {\n    const { cart } = this.state;\n    if (CartService.allReadyToCheckout(cart)) {\n      return;\n    }\n    print.yellow(\"onCartInit\");\n    this.sendToSocket({\n      event: \"updateCart\",\n      payload: {\n        customerId,\n        cartContent\n      }\n    });\n  };\n\n  onCartChange = cartContent => {\n    print.yellow(\"onCartChange\");\n    this.sendToSocket({\n      event: \"updateCart\",\n      payload: {\n        customerId: this.state.customerId,\n        cartContent\n      }\n    });\n  };\n\n  onReadyToCheckout = customerReadyToCheckout => {\n    print.yellow(\"customerReadyToCheckout\");\n    this.sendToSocket({\n      event: \"customerReadyToCheckout\",\n      payload: {\n        customerId: this.state.customerId,\n        customerReadyToCheckout\n      }\n    });\n  };\n\n  render() {\n    const { connectEstablished, cart, connectStatus } = this.state;\n    return (\n      <SocketContext.Provider\n        value={{\n          cart,\n          authorized: connectStatus === \"authorized\",\n          addToCart: this.sendToSocket\n        }}\n      >\n        <Instance\n          onReadyToCheckout={this.onReadyToCheckout}\n          customerId={this.state.customerId}\n          isClientInstance={this.isClientInstance}\n          connectStatus={connectStatus}\n          connect={this.establishConnect}\n          motherId={this.motherId}\n          startSession={\n            this.isClientInstance ? this.joinSession : this.startSession\n          }\n        />\n      </SocketContext.Provider>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport EcwidProvider from \"./EcwidProvider\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nfunction setupApp() {\n  window.EcwidApp.init({\n    app_id: \"buddy-shopping-dev\",\n    autoloadedflag: true,\n    autoheight: false\n  });\n\n  window.Ecwid.OnAPILoaded.add();\n\n  window.Ecwid.OnPageLoaded.add(renderApp);\n\n  // const timer = setInterval(() => {\n  //   const storeData = getStoreData();\n  //   debugger; //eslint-disable-line\n  //   if (storeData) {\n  //     clearInterval(timer);\n  //     renderApp(storeData);\n  //   }\n  // }, 200);\n}\n\nfunction getStoreData() {\n  return window.EcwidApp.getPayload();\n}\n\nfunction renderApp(page) {\n  if (page.type === \"PRODUCT\") {\n    let div = document.getElementById(\"buddy-shopping\");\n\n    if (!div) {\n      div = document.createElement(\"div\");\n      div.id = \"buddy-shopping\";\n      const container = document.querySelector(\n        \".ecwid-productBrowser-backgroundedPanelInner\"\n      );\n      container.appendChild(div);\n    }\n\n    ReactDOM.render(<EcwidProvider />, div);\n  }\n}\n\n// renderApp();\nsetupApp();\nregisterServiceWorker();\n"],"sourceRoot":""}